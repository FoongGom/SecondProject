spring.thymeleaf.cache=false

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/testdb
spring.datasource.username=sm
spring.datasource.password=541228

# SMTP 설정
spring.mail.host=smtp.naver.com
spring.mail.port=587
spring.mail.username=a5584a@naver.com
spring.mail.password=tmdrhadl5584!

# Kakao OAuth2 Configuration
spring.security.oauth2.client.registration.kakao.client-id=2879b28833a7ebe57e0ea5071daba4b7
spring.security.oauth2.client.registration.kakao.client-secret=BXfOnNuuXaNoiOpao3nru3i4AuyGFl9h
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8010/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.scope=	profile_nickname, account_email,birthday,birthyear,phone_number,shipping_address
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Google OAuth2 클라이언트 설정
spring.security.oauth2.client.registration.google.client-id=1083371156938-bivuqvm9c8q23csua692neejd7n4gac7.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
# Naver OAuth2 클라이언트 설정
spring.security.oauth2.client.registration.naver.client-id=gwL2_W3uJHpmiUYLdwZ0
spring.security.oauth2.client.registration.naver.client-secret=Afz2SEdRU6
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8010/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.scope=name,email,birthday,birthyear,mobile
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response




# SMTP 보안 설정 (TLS를 사용하는 경우)
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.auth=true

#spring.datasource.url=jdbc:mysql://데이터베이스

server.port=8010

spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show-sql=true

logging.level.org.hibernate.type.desriptor.sql=trace
spring.jpa.open-in-view=true

logging.level.web=debug

logging.level.org.hibernate.SQL = DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

spring.mvc.log-request-details=true

spring.jpa.properties.hibernate.highlight_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true


#스프링에서는 파일 업로드를 처리하는 방법이 많지만 우린 기본 내장딘 tocat 의 servlet API 를 이용해서 업로드 처리 할 예정입니다.
# 아래는 업로드 처리시 서버에서 수행해야 할 기본 설정 작업 내용입니다.
# 아래 반드시 해야한다.  multipart 패키지의 모든 API 를 사용가능하도록 설정
spring.servlet.multipart.enabled=true
#업로드 시 저장 될 폴더 지정
spring.servlet.multipart.location=D:\\upload
#요청 시 한번에 처리할 최대 파일 사이즈 지정
spring.servlet.multipart.max-request-size = 1024MB
#파일 하나의 최대 크기 설정
spring.servlet.multipart.max-file-size=100MB


spring.main.allow-bean-definition-overriding=true












